예외처리 실습

1. 모든 오류에 대해서 "AllError" 을 출력하도록 하시오.

try:
	error

except:
	print

2. 존재하지 않는 파일을 열 경우에 발생하는 오류에 대해서만 "no data" 를 출력하도록 하시오.

try:
    f=open("noname.txt",'r')
except FileNotFoundError:
    print("no data")
    

3. a={1:2,3:4} 딕셔너리에서 존재하지 않는 키값을 호출할 경우 발생하는 오류에 대해서 오류 메세지를 발생하도록 하시오.

try:
    a={1:2,2:3}
    a[3]
except KeyError as e:
    print(e)

4. "abc" 문자열을 정수로 변환할때 발생하는 오류와 3번에서 발생하는 오류에 대해서 모두 오류메세지를 발생하도록 하시오.

try:
    int("abc")
    a={1:2,2:3}
    a[3]
except (KeyError,ValueError) as e:
    print(e)

5. NameError 발생 시켰을 때 "123"을 정수로 변환시켜서 출력되도록 하시오.

try:
    error

finally:
    number=int("123")
    print(number)

6. in 뒤에 문자열이나 리스크 형태가 아닌 것을 넣었을 때 아무런 오류도 발생하지 않도록 하시오.

try:
    1 in 123
except TypeError:
    pass

7. 자식 클래스에서 부모 클래스의 메서드를 실행시킬 경우 오류가 발생되서 자식 클래스에 강제로 메서드 오버라이딩을 하도록 하시오.

class A:
    def a(self):
        raise NotImplementedError
class AA(A):
    def a(self):
        print("AA의 메소드")
        
a1=AA()
a1.a()

8. Exception 클래스를 이용해서 입력을 통해서 두숫자 AA와 BB를 입력받고 나누었을 때 나머지가 0가 되면 "AA 와 BB의 나머지는 0 입니다."가 출력되도록 하시오.

class Error(Exception):
    def __str__(self):
        return "AA와 BB의 나머지 값은 0입니다."

def TEST(aa,bb):
    if aa%bb ==0:
        raise Error
    
AA=int(input("AA : "))
BB=int(input("BB : "))

try:
    TEST(AA,BB)
    
except Error as e:
    print(e)
    



9. input() 통해서 숫자를 입력받을 경우 try:...except: 를 통해 숫자를 입력 받아야 통과하도록 해보시오.

while True:
    try:
        number=int(input("숫자를 입력하시오"))
        print(number)
        break
    except ValueError:
        continue


========================================================


내장함수 실습

list1=[7,3,5,2,0,6,1,4]  

1. filter 함수를 통해 list1의 각 요소를 2로 나누었을 때 나머지의 값이 1이 되는 것만 출력하시오.

print(list(filter(lambda x:x%2==1,list1)))

2. map 함수를 이용해서 list1의 요소들을 모두 문자열로 만들어서 list2를 만드시오.

list2=list(map(lamdba x:str(x),list1))
print(list2)

3. list2에 대해서 정열하시오.

list2.sort()

lista=sorted(list2)

4. enumerate 함수를 이용해서 list2의 각 요소들에 대한 아스키코드 값으로 list3을 만드시오.

list3=list2[:]

for i,j in enumerate(list3):
	list3[i]=ord(j)

print(list3)
	

5. list3의 각 요소들의 총 합과 평균을 구하시오.

a=sum(list3)
b=sum(list3)/len(list3)

6. list3 의 최대값과 최소값을 구하고 최대값/최소값을 했을 때 나눈 몫과 나머지를 구해보시오.

c=max(list3)
d=min(list3)

divmod(c,d)

7. list2와 list3를 사용해서 {문자:아스키코드} 형태의 딕셔너리를 만들고 test.txt에 문자열 형태로 저장 후에 출력 되도록 하시오.

f=open("test.txt",'w')

dic={}
i=0
while i<len(list2):
	dic[list2[i]]=list3[i]
	i=i+1

data=str(dic)
f.write(data)
f.close()

f=open("test.txt",'r')
dic=eval(f.readline())
print(dic)
f.close()

8.문자열의 함수가 어떤 것이 있는지 알아보시오.

dir(str)

9. input을 통해 실수를 입력 받아서 소숫점 3자리이후 부터는 반올림 되도록 하시오. 단 숫자형으로 입력했을 경우에만 입력되고 숫자형이 아닐때는 재 입력 창이 뜨도록 하시오.

i=0
while i==0:

	try:
		floatnum=float(input("실수를 입력하시오. : "))
		i=i+1
	except:
		print("다시 입력하시오")
		continue

print(round(floatnum,3))


외장함수 실습

1. cmd 창에서 python을 바로 실행시키고 c:\doit 폴더로 이동해보시오.

import os
os.chdir("c:/doit")

2. 현재 위치해 있는 폴더를 출력하시오.

os.getcwd()

3. 현재 위치에 test1 폴더를 생성하시오.

os.mkdir("test1")

4. test1폴더 안에 srp.txt를 생성하고 ['가위','바위','보']를 저장하시오.

import pickle

f=open("c:/doit/test1/srp.txt",'wb')

pickle.dump(['가위','바위','보'],f)

f.close()

5. test1폴더 안에 srpuser.txt를 생성하고 input를 통해서 '가위','바위,'보' 중 하나를 10번 입력하고 저장되도록 하시오.

srpusers=[]

for i in range(10):
	srpusers.append(input("가위,바위,보 : "))

f=open("c:/doit/test1/srpuser.txt",'wb')

pickle.dump(srpusers,f)

f.close()


6. srp.txt와 srpuser.txt 를 이용해서 본인이 입력한 가위바위보의 승패를 가려보시오.(hint:random함수)


f1=open("c:\\doit\\test1\\srp.txt",'rb')

srplist1=pickle.load(f1)

f1.close()

f1=open("c:\\doit\\test1\\srpuser.txt",'rb')

srplistuser=pickle.load(f1)

f1.close()

print(srplist1)

srplistrandom=[]

print(srplistrandom)

i=0
w=0
l=0
d=0
srp_win={'가위':'바위','바위':'보','보':'가위'}

while i<10:
	srprandom=random.choice(srplist1)
    
	srplistrandom.append(srprandom)
    
	i=i+1

print(srplistrandom)

print(list(zip(srplistuser,srplistrandom)))
    
for a,b in zip(srplistuser,srplistrandom):
	if a not in ['가위','바위','보']:
		print("짐")
		l=l+1
	elif a == b:
		print("비김")
		d=d+1
	elif a == srp_win[b]:
		print("이김")
		w=w+1
	else:
		print("짐")
		l=l+1

print("{} 승 {} 패 {} 비김".format(w,l,d))